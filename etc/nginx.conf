user nobody nogroup;
worker_processes 1;

error_log /var/log/nginx/error_log info;

events {
	worker_connections 1024;
	use epoll;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';

	client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;

	connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;

	gzip on;
	gzip_min_length 1100;
	gzip_buffers 4 8k;
	gzip_types text/plain;

	output_buffers 1 32k;
	postpone_output 1460;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	keepalive_timeout 75 20;

	ignore_invalid_headers on;

	index index.html;

    server {
        listen   80;
        server_name  ucall.org;
        root /var/www/localhost/htdocs/hello;
        
        access_log  /var/log/nginx/ucall-access.log;
        error_log   /var/log/nginx/ucall-error.log;
        
    #    location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|mov) {
    #        access_log   off;
    #        expires      30d;
    #    }
        
        location /static/ {
    	    alias /opt/ucall/web/ucall_backend/static/;
        }
        
        location /simple-demo/ {
            root /opt/ucall/web;
        }
        
        location /ui/ {
            root /opt/ucall/web;
        }
        
        location / {
            fastcgi_pass   127.0.0.1:3033;
            fastcgi_param PATH_INFO $fastcgi_script_name;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param SERVER_NAME $server_name;
            fastcgi_param SERVER_PORT $server_port;
            fastcgi_param SERVER_PROTOCOL $server_protocol;
            fastcgi_param CONTENT_TYPE $content_type;
            fastcgi_param CONTENT_LENGTH $content_length;
            fastcgi_pass_header Authorization;
            fastcgi_intercept_errors off;
        }

        location /webdav/ {
            include /etc/nginx/fastcgi_params;
            fastcgi_param SCRIPT_FILENAME /var/www/localhost/htdocs/webdav-extensions.php;
            fastcgi_param DEPTH $http_depth;
            fastcgi_param HOST $host;
            fastcgi_param DESTINATION $http_destination;
            fastcgi_param OVERWRITE $http_overwrite;

            root                    /home/;
            client_body_temp_path   /tmp;
            autoindex               on;
            dav_methods             PUT DELETE MKCOL;
            create_full_put_path    on;
            dav_access              group:rw  all:r;

            # NGINX WebDAV support is incomplete and somewhat too strict. We handle
            # a few WebDAV methods manually in a PHP script to fill out the cracks.
            if ($request_method ~ ^(PROPFIND|OPTIONS|COPY|MOVE)$) {
                fastcgi_pass localhost:9000;
                break;
            }

            # NGINX WebDAV requires trailing slashes on directories, yet certain
            # common WebDAV clients don't support them. Do rewrites to fix it,
            if (-d $request_filename) { rewrite ^(.*[^/])$ $1/ break; }
            if ($request_method = MKCOL) { rewrite ^(.*[^/])$ $1/ break; }
        }
 
    }

    server {
        listen   8080;
        server_name  vtiger.ucall.org;
        root /opt/vtiger/;
        
        access_log  /var/log/nginx/vtiger-access.log;
        error_log   /var/log/nginx/vtiger-error.log;
        
        location / {
                root   /opt/vtiger/;
                index index.php;
        }
 
        # if the request starts with our frontcontroller, pass it on to fastcgi
        location ~ \.php$ {
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index       index.php;
                include /etc/nginx/fastcgi_params;
                fastcgi_param  SCRIPT_FILENAME  /opt/vtiger$fastcgi_script_name;
                fastcgi_connect_timeout 60;
                fastcgi_send_timeout 180;
                fastcgi_read_timeout 180;
                fastcgi_buffer_size 128k;
                fastcgi_buffers 4 256k;
                fastcgi_busy_buffers_size 256k;
                fastcgi_temp_file_write_size 256k;
                fastcgi_intercept_errors on;
        }
    }
}
